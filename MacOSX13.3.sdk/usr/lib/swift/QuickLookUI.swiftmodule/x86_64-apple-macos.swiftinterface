// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.117.6 clang-1403.0.22.8.50)
// swift-module-flags: -target x86_64-apple-macos13.3 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftQuickLookUI -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name QuickLookUI
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 965.3
import PDFKit
@_exported import QuickLookUI
import Swift
import _Concurrency
import _StringProcessing
extension QuickLookUI.QLPreviewReply {
  public var stringEncoding: Swift.String.Encoding {
    get
    set(newEncoding)
  }
  convenience public init(contextSize: CoreFoundation.CGSize, isBitmap: Swift.Bool, drawUsing closure: @escaping (CoreGraphics.CGContext, QuickLookUI.QLPreviewReply) throws -> Swift.Void)
  convenience public init(forPDFWithPageSize defaultPageSize: CoreFoundation.CGSize, createDocumentUsing closure: @escaping (QuickLookUI.QLPreviewReply) throws -> PDFKit.PDFDocument)
  convenience public init(dataOfContentType contentType: UniformTypeIdentifiers.UTType, contentSize: CoreFoundation.CGSize, createDataUsing closure: @escaping (QuickLookUI.QLPreviewReply) throws -> Foundation.Data)
}
