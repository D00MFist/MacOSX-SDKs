// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.117.6 clang-1403.0.22.8.50)
// swift-module-flags: -target arm64e-apple-macos13.3 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftVirtualization -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name Virtualization
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 104.22
import Swift
@_exported import Virtualization
import _Concurrency
import _StringProcessing
extension Virtualization.VZVirtualMachine {
  public func start(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
  public func pause(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
  public func resume(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
}
extension Virtualization.VZVirtioSocketDevice {
  public func connect(toPort port: Swift.UInt32, completionHandler: @escaping (Swift.Result<Virtualization.VZVirtioSocketConnection, any Swift.Error>) -> Swift.Void)
}
extension Virtualization.VZMacOSRestoreImage {
  public class func load(from fileURL: Foundation.URL, completionHandler: @escaping (Swift.Result<Virtualization.VZMacOSRestoreImage, any Swift.Error>) -> Swift.Void)
  public class func fetchLatestSupported(completionHandler: @escaping (Swift.Result<Virtualization.VZMacOSRestoreImage, any Swift.Error>) -> Swift.Void)
}
extension Virtualization.VZMacOSInstaller {
  public func install(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
}
